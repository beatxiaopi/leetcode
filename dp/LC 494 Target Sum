class Solution {
    
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int sum = accumulate(nums.begin(), nums.end(), 0);
        if (target > sum || target < (0-sum)) return 0;
        int bag = (sum + target)/2;
        if ((sum + target)%2 == 1) return 0;
        vector<int>dp(bag+1, 0);
        dp[0] = 1;
        for (int i = 0; i < nums.size(); i++) {
            for (int j = bag; j >= nums[i]; j--) {
                dp[j] += dp[j-nums[i]];
            }
        }
        return dp[bag];
    }
};
