class Solution {
    int dp[100][100];
public:
    int uniquePathsWithObstacles(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        for (int i = 0; i < m && grid[i][0] != 1; i++) {
            dp[i][0] = 1;
        }
        for (int j = 0; j < n && grid[0][j] != 1; j++) {
            dp[0][j] = 1;
        }
        for (int i = 1; i < m; i++) 
            for (int j = 1; j < n; j++) {
                if (grid[i][j] == 1) continue;
                if (grid[i-1][j] != 1) {
                    dp[i][j] += dp[i-1][j];
                }
                if (grid[i][j-1] != 1) {
                    dp[i][j] += dp[i][j-1];
                }
            }
        return dp[m-1][n-1];
    }
};

//dp[i][j] = dp[i-1][j] + dp[i][j-1];
