class Solution {
public:
    int numWays(int steps, int arrLen) {
        long M = 1e9+7;
        auto dp = vector<vector<long>>(steps+1, vector<long>(steps/2+2));
        dp[0][0] = 1;
        for (int i = 1; i <= steps; i++) {
            for (int j = 0; j < min(steps/2+1, arrLen); j++) {
                if (j == 0) {
                    dp[i][j] = (dp[i-1][j] + dp[i-1][j+1])%M;
                }
                
                else if (j == arrLen - 1) {
                    dp[i][j] = (dp[i-1][j-1] + dp[i-1][j])%M;
                }
                else dp[i][j] = (dp[i-1][j-1] + dp[i-1][j] + dp[i-1][j+1])%M;
            }
        }
        return dp[steps][0];
    }
};
