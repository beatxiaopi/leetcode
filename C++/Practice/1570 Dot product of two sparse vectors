class SparseVector {
public:
    vector<pair<int, int>> p;
    SparseVector(vector<int> &nums) {
        for (int i = 0; i < nums.size(); i++) {
            p.push_back({i, nums[i]});
        }
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        int i = 0, j = 0, ans = 0;
        while (i < p.size() && j < vec.p.size()) {
            if (p[i].first == vec.p[j].first) {
                ans += p[i].second * vec.p[j].second;
                i++; j++;
            }
            else if (p[i].first > vec.p[j].first) {
                i++;
            }
            else j++;
        }
        return ans;
    }
};
