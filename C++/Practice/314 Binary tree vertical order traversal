/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        vector<vector<int>> res;
        if (!root) return res;
        map<int, vector<int>> m;
        queue<pair<int, TreeNode*>> q;
        q.push({0, root});
        while (!q.empty()) {
            int len = q.size();
            while (len--) {
                int col = q.front().first;
                TreeNode* p = q.front().second;
                q.pop();
                m[col].push_back(p -> val);
                if (p -> left) {
                    q.push({col-1, p -> left});
                }
                if ( p -> right) {
                    q.push({col+1, p -> right});
                }
            }
        }
        for (auto p : m) {
            res.push_back(p.second);
        }
        return res;
    }
};
