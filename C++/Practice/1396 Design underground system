class UndergroundSystem {
    unordered_map<int, pair<string, int>> inNum; //id -> start station, start time
    unordered_map<string, pair<double, int>> routeNum;//route name -> total duration, total trip count
    
public:
    UndergroundSystem() {
        
    }
    
    void checkIn(int id, string stationName, int t) {
        inNum[id] = {stationName, t};
    }
    
    void checkOut(int id, string stationName, int t) {
        auto inTime = inNum[id];
        inNum.erase(id);
        string route = inTime.first + " " + stationName;
        routeNum[route].first += t - inTime.second;
        routeNum[route].second += 1;
    }
    
    double getAverageTime(string startStation, string endStation) {
        string route = startStation + " " + endStation;
        return routeNum[route].first/routeNum[route].second;
    }
};

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem* obj = new UndergroundSystem();
 * obj->checkIn(id,stationName,t);
 * obj->checkOut(id,stationName,t);
 * double param_3 = obj->getAverageTime(startStation,endStation);
 */
