class WordDistance {
    unordered_map<string, vector<int>> index;
public:
    WordDistance(vector<string>& wordsDict) {
        for (int i = 0; i < wordsDict.size(); i++) {
            index[wordsDict[i]].push_back(i);
        }
    }
    
    int shortest(string word1, string word2) {
        int i = 0, j = 0;
        int dist = INT_MAX;
        while (i < index[word1].size() && j < index[word2].size()) {
            dist = min(dist, abs(index[word1][i] - index[word2][j]));
            index[word1][i] > index[word2][j]? j++: i++;
        }
        return dist;
    }
};

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance* obj = new WordDistance(wordsDict);
 * int param_1 = obj->shortest(word1,word2);
 */
