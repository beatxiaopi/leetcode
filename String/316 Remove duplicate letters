class Solution {
    public String removeDuplicateLetters(String s) {
        Stack<Character> stack = new Stack<>();
        Map<Character, Integer> count= new HashMap<>();
        Map<Character, Boolean> used= new HashMap<>();
        for(int i=0;i<s.length();i++) {
            count.put(s.charAt(i), count.getOrDefault(s.charAt(i),0)+1);
        }
        for(int i=0;i<s.length();i++) {
            used.put(s.charAt(i), false);
        }
        for(int i=0;i<s.length();i++) {
            char ch=s.charAt(i);
            if (used.get(ch)) {
                count.put(ch, count.get(ch)-1);
            }
            else if (stack.isEmpty()||ch-stack.peek()>0) {
                stack.push(ch);
                used.put(ch, true);
                count.put(ch, count.get(ch)-1);
            }
            else {
                while (!stack.isEmpty() && stack.peek()-ch>0 && count.get(stack.peek())>0) {
                    used.put(stack.pop(), false);      
                }
                stack.push(ch);
                used.put(ch, true);
                count.put(ch,count.get(ch)-1);
            }
        }
        StringBuilder sb = new StringBuilder();
        while(!stack.isEmpty()) {
            sb.insert(0, stack.pop());
        }
        return sb.toString();
    }
}
