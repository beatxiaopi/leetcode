class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int n=s.length(), max =0, p1=0, p2=0;
        if(n<=k) return n;
        Map<Character, Integer> map = new HashMap<>();
        while(p2<n) {
            map.put(s.charAt(p2), p2++);
            if(map.size()==k+1) {
                int removeIdx=Collections.min(map.values());
                map.remove(s.charAt(removeIdx));
                p1=removeIdx+1;
            }
            max=Math.max(max, p2-p1);
        }
        return max;
    }
}
