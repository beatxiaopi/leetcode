class Solution {
    public int numIslands(char[][] grid) {
        int m = grid.length, n = grid[0].length;
        if (m == 0 || n == 0) return 0;
        int count=0;
        Deque <int []> q = new ArrayDeque<>();
        int [][] dirs = {{1,0}, {-1,0}, {0,1}, {0,-1}};
        for (int i=0; i<m; i++) {
            for (int j=0; j<n; j++) {
                if (grid[i][j] != '1') {
                    continue;
                }
                count += 1;
                q.add(new int [] {i, j});
                grid[i][j] = '2';
                while (!q.isEmpty()) {
                    int [] curr = q.poll();
                    for (int k = 0; k < 4; k++) {
                        int x = curr[0] + dirs[k][0];
                        int y = curr[1] + dirs[k][1];
                        if (x < 0 || x >= m || y < 0 || y >= n) {
                            continue;
                        }
                        if (grid[x][y] != '1') {
                            continue;
                        }
                        q.add(new int [] {x,y});
                        grid[x][y] = '2';
                    }
                }
            }
        }
        return count;
    }
}
