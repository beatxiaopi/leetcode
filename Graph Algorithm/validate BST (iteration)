class Solution {
    private Deque<TreeNode> stack = new LinkedList<>();
    private Deque<Integer> lowerLimits = new LinkedList<>();
    private Deque<Integer> higherLimits = new LinkedList<>();
    private void update(TreeNode root, Integer low, Integer high) {
        stack.add(root);
        lowerLimits.add(low);
        higherLimits.add(high);
    }
    public boolean isValidBST(TreeNode root) {
        Integer low=null, high=null, val;
        update(root, low, high);
        while (!stack.isEmpty()) {
            root=stack.poll();
            low=lowerLimits.poll();
            high=higherLimits.poll();
            if (root==null) continue;
            val=root.val;
            if (low!=null&&val<=low) return false;
            if (high!=null && val>=high) return false;
            update(root.left, low, val);
            update(root.right, val, high);
        }
        return true;
    }
}
