class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root==null) return false;
        LinkedList<TreeNode> path = new LinkedList<>();
        LinkedList<Integer> sum = new LinkedList<>();
        TreeNode curr;
        int currSum;
        path.add(root);
        sum.add(targetSum-root.val);
        while(!path.isEmpty()) {
            curr = path.poll();
            currSum=sum.poll();
            if (curr.left==null && curr.right==null && currSum==0) {
                return true;
            }
            if (curr.left!=null) {
                path.add(curr.left);
                sum.add(currSum-curr.left.val);
            }
            if(curr.right!=null) {
                path.add(curr.right);
                sum.add(currSum-curr.right.val);
            }
        }
        return false;
    }
}
