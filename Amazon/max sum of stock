#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <cmath>
#include <set>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <climits>
#include <numeric>
using namespace std;
using LL = long long;


int main() {
    // Write C++ code here
    vector<int>data = {1,2,7,7,4,3,6};
    
    int n = data.size();
    deque<int>dq;
    int res = 0, j = 0;
    for (int i = 0; i < n; i++) {
        int temp = 0;
        if (dq.size() == 2 && data[i] != dq.back() && data[i] != dq.front()) {
            temp = dq.front() + dq.back() + data[i];
            dq.push_back(data[i]);
            dq.pop_front();
            res = max(res, temp);
        }
        else if (dq.size() == 2 && data[i] == dq.front()) {
            dq.push_back(data[i]);
            dq.pop_front();
        }
        else if (dq.size() == 2 && data[i] == dq.back()) {
            dq.push_back(data[i]);
            dq.pop_front();
            dq.pop_front();
        }
        else if (dq.size() == 1 && data[i] == dq.back()) {
            dq.push_back(data[i]);
            dq.pop_front();
        }
        else dq.push_back(data[i]);
    }
    cout<<"res="<<res<<";";

    return 0;
}
