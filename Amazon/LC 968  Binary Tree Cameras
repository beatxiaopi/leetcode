/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int res;
public:
    int minCameraCover(TreeNode* root) {
        res = 0;
        if(dfs(root) == 0) return res+1;
        else return res;
    }
    
    int dfs(TreeNode* node) {
        if (node == NULL) return 2;
        int left = dfs(node->left);
        int right = dfs(node->right);
        if (left == 2 && right == 2) return 0;
        if (left == 0 || right == 0) {
            res += 1;
            return 1;
        }
        if (left == 1 || right == 1) return 2;
        return -1;
    }
};
