// Online C++ compiler to run C++ program online
#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <cmath>
#include <set>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <climits>
using namespace std;
using LL = long long;

int main() {
    // Write C++ code here
    vector<int> data = {1, 3, 2, 3};
    string text = "aabbccefg";
    int n = text.size();
    unordered_map<int, int>freq;
    for (int i = 0; i < n; i++) {
        freq[text[i]-'a']++;
    }
    vector<pair<int, int>>rank(freq.begin(), freq.end());
    sort(rank.begin(), rank.end(), [](auto &a, auto &b) {return a.second > b.second;});
    int count = 0;
    for (int i = 0; i < rank.size(); i++) {
        if (i >=0 && i < 9) count += rank[i].second;
        else if (i >=9 && i < 18) count += rank[i].second*2;
        else count += rank[i].second*3;
    }
    cout<<"res="<<count<<";";

    return 0;
}

method 2:
class Solution {
public:
    int minimumKeypresses(string s) {
        int n = s.size();
        unordered_map<int, int>freq;
        for (int i = 0; i < n; i++) {
            freq[s[i]-'a']++;
        }
        vector<pair<int, int>>press;
        for (auto x : freq) {
            press.push_back({x.second, x.first});
        }
        sort(press.begin(), press.end());
        reverse(press.begin(), press.end());
        
        int res = 0;
        for (int i = 0; i < press.size(); i++) {
            if (i < 9) res += press[i].first;
            else if (i >= 9 && i < 18) res += press[i].first *2;
            else res += press[i].first*3;
        }
        return res;
    }
};
