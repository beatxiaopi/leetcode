class Solution {
    using LL = long long;
public:
    long long maximumBooks(vector<int>& books) {
        int n = books.size();
        vector<LL>dp(n, 0);
        stack<int>Stack;
        LL res = 0;
        for (int i = 0; i < n; i++) {
            while (!Stack.empty() && 
                   books[Stack.top()] > books[i] - (i - Stack.top())) {
                Stack.pop();
            }
            if (!Stack.empty()) {
                int j = Stack.top();
                int L = i - j;
                dp[i] = dp[j] + ((LL)books[i] + (LL)books[i] - L + 1)*L/2;
            }
            else {
                int L = min(i+1, books[i]);
                dp[i] = ((LL)books[i] + (LL)books[i] - L + 1)*L/2;
            }
            Stack.push(i);
            res = max(res, dp[i]);
        }
        return res;
    }
};

//[1, 2, 3, 4, 5, 8, 5, 5, 7, 9]
// j              i  k 
// 0  1  2  3  4  5  6  7  8  9                 
