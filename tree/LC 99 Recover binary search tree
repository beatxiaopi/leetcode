/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* last = new TreeNode(INT_MIN);
    TreeNode* first = NULL;
    TreeNode* second = NULL;
public:
    void recoverTree(TreeNode* root) {
        dfs(root);
        int v = first->val;
        first->val = second->val;
        second->val = v;
    }
    
    void dfs(TreeNode* node) {
        if (node == NULL) return;
        dfs(node->left);
        if(node->val >= last->val) {
            last = node;
        }
        else {
            if (first == NULL) {
                first = last;
                second = node;
                last = node;
            }
            else second = node;
        }
        dfs(node->right);
    }
};
