/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<vector<int>>res;
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int>curr;
        dfs(root, curr, targetSum);
        return res;
    }
    
    void dfs(TreeNode* node, vector<int>path, int k) {
        if (node == NULL) return;
        if (node->left == NULL && node->right == NULL && node->val == k){
            path.push_back(node->val);
            res.push_back(path);
        }
        if (node->left) {
            path.push_back(node->val);
            dfs(node->left, path, k - node->val);
            path.pop_back();
        }
        if (node->right) {
            path.push_back(node->val);
            dfs(node->right, path, k - node->val);
            path.pop_back();
        }
    }
};
