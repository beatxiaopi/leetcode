/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<TreeNode*>res;
public:
    int sumOfLeftLeaves(TreeNode* root) {
        findLeft(root);
        int sum = 0;
        for (auto x : res) {
            sum += x->val;
        }
        return sum;
    }
    
    void findLeft(TreeNode* node) {
        if (node == NULL) return;
        if (node->left != NULL && node->left->left == NULL && node->left->right == NULL) 
            res.push_back(node->left);
        findLeft(node->left);
        findLeft(node->right);
    }
};
