/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<int>res;
    TreeNode* pre = NULL;
    int count = 1, maxCount = 0;
public:
    vector<int> findMode(TreeNode* root) {
        dfs(root);
        return res;
    }
    
    void dfs(TreeNode* node) {
        if (node == NULL) return;
        dfs(node->left);
        if (pre == NULL) {
            count = 1;  
        }
        else if (pre->val == node->val) {
                count++;
        }
        else {
            count = 1;
        }
        
        if (count == maxCount) {
            res.push_back(node->val);
        }
        else if (count > maxCount) {
            res.clear();
            res.push_back(node->val);
            maxCount = count;
        }
        pre = node;
        dfs(node->right);
    }
};
