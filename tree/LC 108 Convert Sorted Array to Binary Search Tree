/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* root = partition(nums, 0, nums.size() -1);
        return root;
    }
    
    TreeNode* partition(vector<int>& nums, int a, int b) {
        if (a > b) return NULL;
        int mid = a + (b - a)/2;
        TreeNode* node = new TreeNode(nums[mid]);
        node->left = partition(nums, a, mid - 1);
        node->right = partition(nums, mid + 1, b);
        return node;
    }
};
