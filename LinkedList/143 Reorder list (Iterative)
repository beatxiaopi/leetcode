/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        ListNode dummy= new ListNode(0);
        dummy.next=head;
        ListNode p,q;
        int count=0;
        p=dummy;
        while(p.next!=null) {
            p=p.next;
            count++;
        }
        q=dummy;
        for(int i=0; i<(count+1)/2; i++) {
            q=q.next;
        }
        ListNode secHead=q.next;
        q.next=null;
        secHead=reverseList(secHead);
        q=secHead;
        p=head;
        ListNode h=dummy;
        while(p!=null || q!=null) {
            if(p!=null) {
                h.next=p;
                p=p.next;
                h=h.next;
            }
            if(q!=null) {
                h.next=q;
                q=q.next;
                h=h.next;
            }
        }
    }
    private ListNode reverseList(ListNode head) {
        ListNode prev=null;
        ListNode curr=head;
        ListNode temp;
        while(curr!=null) {
            temp=curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
}
