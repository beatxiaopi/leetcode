/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode curr= head;
        int count=0;
        while(count<k && curr!=null) {
            curr=curr.next;
            count++;
        }
        if(count==k) {
            ListNode revHead=reverseList(head, k);
            head.next=reverseKGroup(curr, k);
            return revHead;
        }
        return head;
    }
    private ListNode reverseList(ListNode head, int k) {
        ListNode prev=null;
        ListNode temp;
        ListNode curr;
        curr=head;
        for(int i=0; i<k; i++) {
            temp=curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
}
